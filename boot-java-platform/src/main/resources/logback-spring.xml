<?xml version="1.0" encoding="UTF-8"?>
<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 日志配置项  使用${name} -->
    <!-- 日志保存最大天数 -->
    <property name="log.maxHistory" value="30"/>
    <!-- 日志输出级别 -->
    <property name="log.level" value="info"/>
    <!-- 日志文件大小-->
    <property name="log.maxSize" value="5MB"/>
    <!-- 日志输出位置 以“/”开头表示绝对位置 否则是相对位置-->
    <property name="log.home" value="/spring-boot-log/"/>
    <!-- 日志名字-->
    <property name="log.name" value="spring-boot"/>

    <!-- appender 负责写日志的组件, 主要用来设置日志的输出位置, 日志文件的生成策略 -->
    <!-- ConsoleAppender 把日志打印到控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- RollingFileAppender 滚动记录地把日志输出到文件, 也就是可以支持日志文件按文件大小拆分,或者按日期拆分.-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/${log.name}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${log.maxSize}</maxFileSize>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- RollingFileAppender 滚动记录地把日志输出到文件, 也就是可以支持日志文件按文件大小拆分,或者按日期拆分.-->
    <appender name="ASPECT_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/aop-log.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>${log.maxSize}</maxFileSize>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- springProfile: 日志输出同样支持多环境配置，如 dev 、 test 、 prod-->
    <springProfile name="dev">
        <logger name="com.jx.platform.dao" level="debug" additivity="false">
            <!-- addtivity: 是否向上级logger传递打印信息。默认是true-->
            <!-- appender-ref: 日志输出到指定appender-->
            <appender-ref ref="STDOUT"/>
        </logger>
        <logger name="com.boot.config.aop" level="DEBUG" additivity="false">
            <!-- addtivity: 是否向上级logger传递打印信息。默认是true-->
            <!-- appender-ref: 日志输出到指定appender-->
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="ASPECT_LOG"/>
        </logger>
    </springProfile>
    <springProfile name="local">
        <logger name="com.boot.content.mapper" level="TRACE" additivity="false">
            <!-- addtivity: 是否向上级logger传递打印信息。默认是true-->
            <!-- appender-ref: 日志输出到指定appender-->
            <appender-ref ref="STDOUT"/>
        </logger>
        <logger name="com.boot.config.aop" level="DEBUG" additivity="false">
            <!-- addtivity: 是否向上级logger传递打印信息。默认是true-->
            <!-- appender-ref: 日志输出到指定appender-->
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="ASPECT_LOG"/>
        </logger>
    </springProfile>
    <root level="${log.level}">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
    </root>

</configuration>